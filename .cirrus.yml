common: &COMMON
  env:
    HOME: /tmp # cargo needs it
    RUST_BACKTRACE: full  # Better info for debugging test failures.
  setup_script:
    - pkg install -y git-lite llvm python
    - fetch https://sh.rustup.rs -o rustup.sh
    - sh rustup.sh -y --profile=minimal --default-toolchain ${VERSION}-x86_64-unknown-freebsd
  cargo_cache:
    folder: $HOME/.cargo/registry
    fingerprint_script: cat Cargo.lock || echo ""
  build_script:
    - . $HOME/.cargo/env
    - cargo build --all
  test_script:
    - . $HOME/.cargo/env
    - cargo test --all
  iostat_script:
    # Run iostat as a smoketest of freebsd-libgeom
    - . $HOME/.cargo/env
    - cargo run --example iostat
  # Until -b works, there's no way to run gstat non-interactively

task:
  env:
    VERSION: 1.70.0
  matrix:
    - name: FreeBSD 15.0-CURRENT MSRV
      freebsd_instance:
        image_family: freebsd-15-0-snap
    - name: FreeBSD 14.1 MSRV
      freebsd_instance:
        image: freebsd-14-1-release-amd64-ufs
    - name: FreeBSD 13.3 MSRV
      freebsd_instance:
        image: freebsd-13-3-release-amd64
  << : *COMMON
  before_cache_script: rm -rf $HOME/.cargo/registry/index

task:
  name: FreeBSD 13.3 nightly
  env:
    VERSION: nightly
  freebsd_instance:
    image: freebsd-13-3-release-amd64
  << : *COMMON
  doc_script:
    - . $HOME/.cargo/env
    - cargo doc --all-features --no-deps
  clippy_script:
    - . $HOME/.cargo/env
    - rustup component add clippy
    - cargo clippy --all-features --all-targets -- -D warnings
  audit_script:
    - . $HOME/.cargo/env
    # install ca_root_nss due to https://github.com/rustsec/rustsec/issues/1137
    - pkg install -y ca_root_nss cargo-audit
    - cargo audit
  # Test our minimal version spec
  minver_test_script:
    - . $HOME/.cargo/env
    - cargo update -Zdirect-minimal-versions
    - cargo check --all-targets
  fmt_script:
    - . $HOME/.cargo/env
    - rustup component add rustfmt
    - cargo fmt -- --check --color=never
  before_cache_script: rm -rf $HOME/.cargo/registry/index

# Ensure that the docs can be cross-compiled, as Cirrus does.
task:
  name: Cross docs
  container:
    image: rustlang/rust:nightly
  cargo_cache:
    folder: $HOME/.cargo/registry
    fingerprint_script: cat Cargo.lock || echo ""
  doc_script:
    - rustup target add x86_64-unknown-freebsd
    - cargo doc --target x86_64-unknown-freebsd --no-deps -p freebsd-libgeom-sys -p freebsd-libgeom
  before_cache_script: rm -rf $HOME/.cargo/registry/index
